#include <iostream>
#include <cstring>
#include <windows.h>//defines Windows specific functions that can be used
#include <conio.h>
using namespace std;

class Interface {
public:
    Interface(); //get the output handle
    void initialWindow(); //initialize the window
    void initialCovor(); //draw the initial interface
    void getName(); //enter the player's name
    void gameResult(string name,int score); //game result
    void initialViewOnePlayer(); //initialize map
    void printPointPlayer1(int point); //show the player's score
    void printNamePlayer1(string name); //show the player's name
    void gotoXY(int x, int y); //locate the cursor
    void drawNextBlock1(Block t); //draw the next block
    void drawNowBlock1(Block t,int x,int y); //draw the current block
    void deleteBlock1(); //delete the block
    void refreshBlock1(int x,int y,Block temp); //refresh the block
    void clearMap1(int map[20][10]); //clear the map
    void printMap1(int map[20][10]); //print the map
private:
    HANDLE hOut;
    Block tempBlock;
    int x, y;
};

Interface::Interface()
{ //get output handle
    hOut = GetStdHandle(STD_OUTPUT_HANDLE);
}
void Interface::initialWindow(){
    system("cls"); //clear the screen
    system("mode con cols=100 lines=30"); //set the size of the window
    CONSOLE_CURSOR_INFO cursor_info = {1, 0}; //cursor information
    SetConsoleCursorInfo(hOut, &cursor_info); //set the cursor to be invisible
    system("title Tetris"); //set the title
}

void Interface::gotoXY(int x, int y){
    COORD pos;
    pos.X = x;
    pos.Y = y;
    SetConsoleCursorPosition(hOut, pos); //set the position of the cursor
}
void Interface::initialCovor(){
    SetConsoleTextAttribute(hOut,3);
    int mark[9][31]={ 0,0,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,0,0,1,0,
                      0,1,1,0,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,1,1,1,1,0,1,0,0,
                      0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,1,1,1,1,
                      1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,
                      0,0,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,1,0,1,0,1,0,
                      0,0,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1,0,1,0,
                      1,1,1,0,0,0,1,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,0,1,0,1,0,1,0,
                      0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,0,
                      0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0};
    for(int i=0; i<9; i++)
    {
        gotoXY(18, i+5);
        for(int j=0; j<31; j++)
        {
            if(mark[i][j]==1)
                cout<<"■";
            else
                cout << "  ";
        }
        cout << endl;
    }
    SetConsoleTextAttribute(hOut,14);
    gotoXY(36,20);
    cout<<"Press any key to start... ";
    gotoXY(36,21);
    system("pause");
}

void Interface::getName(){
    gotoXY(23,20);
    cout<<"                           ";
    gotoXY(23,22);
    cout<<"                           ";
    gotoXY(60,18);
    cout<<"              ";
    gotoXY(60,24);
    cout<<"              ";
    gotoXY(23,20);
    SetConsoleTextAttribute(hOut,14);
    cout<<"Enter your name:";
    SetConsoleTextAttribute(hOut,15);
    gotoXY(36,21);
    cout<<"■■■■■■■■■■■■"<<endl;
    gotoXY(36,20);
    cout<<"                          ";
    gotoXY(36,20);
    CONSOLE_CURSOR_INFO cursor_info = {100,1}; //cursor information
    SetConsoleCursorInfo(hOut,&cursor_info); //set the cursor to be visible
}

void Interface::gameResult(string name,int score){
    SetConsoleTextAttribute(hOut,14|32|64|128);
        gotoXY(21,5);
        for(int i=0;i<50;i++) cout<<" ";
        for(int i=0;i<15;i++){
            gotoXY(21,i+5);
            cout<<"  ";
        }
        for(int i=0;i<15;i++){
            gotoXY(71,i+5);
            cout<<"  ";
        }
        gotoXY(21,19);
        for(int i=0;i<50;i++) cout<<" ";
        SetConsoleTextAttribute(hOut,0);
        for(int i=1;i<14;i++){
            gotoXY(23,i+5);
            for(int j=0;j<48;j++){
                cout<<" ";
            }
        }
        SetConsoleTextAttribute(hOut,15);
        gotoXY(41,6);
        cout<<"GAME OVER";
        gotoXY(30,9);
        cout<<"Result: ";
        gotoXY(44,11);
        cout<<"Player: " << name;
        gotoXY(44,13);
        cout<<"Score:  " << score;
        gotoXY(30,15);
        cout<<"Play again? ";
        gotoXY(33,17);
        cout<<"YES (Y)";
        gotoXY(48,17);
        cout<<"NO (N)";
}

void Interface::initialViewOnePlayer(){
    system("cls");
    CONSOLE_CURSOR_INFO cursor_info = {1, 0}; //cursor information
    SetConsoleCursorInfo(hOut, &cursor_info); //set the cursor to be invisible
    SetConsoleTextAttribute(hOut,15); //set the color white
    for(int i=0;i<20;i++)
    {
        cout<<"                    ■                    ■" << endl;
    }
    gotoXY(0,20);
    cout << "                    ■■■■■■■■■■■■" << endl;
    gotoXY(0,0);
    cout << "■Player: " << endl << endl;
    cout << "■Score: 0" << endl << endl;
    cout << "■Next block: " << endl;
    gotoXY(0,11);
    SetConsoleTextAttribute(hOut,3);
    cout << "■Rules: " << endl << endl;
    cout << "W: Rotate " << endl;
    cout << "S: Speedup " << endl;
    cout << "A: Move left " << endl;
    cout << "D: Move right " << endl;
    cout << "[Space]: Pause " << endl;
    gotoXY(0,23);
}

void Interface::printNamePlayer1(string name)
{
    SetConsoleTextAttribute(hOut,15);
    gotoXY(9,0);
    cout << name << endl;
}

void Interface::printPointPlayer1(int point)
{
    SetConsoleTextAttribute(hOut,15);
    gotoXY(8,2);
    cout << "   " << endl;
    gotoXY(8,2);
    cout << point << endl;
};

void Interface::drawNextBlock1(Block t){
    for(int i=0; i<4; i++)
    {
        gotoXY(2,6+i);
        for(int j=0; j<4; j++)
        {
            cout << "  ";
        }
    }
    SetConsoleTextAttribute(hOut,t.getColor());
    for(int i=0; i<4; i++)
    {
        gotoXY(2,6+i);
        for(int j=0; j<4; j++)
        {
            if(t.block[i][j]==1)
                cout << "■";
            else
                cout << "  ";
        }
    }
};

void Interface::drawNowBlock1(Block t,int x,int y){
    SetConsoleTextAttribute(hOut,t.getColor());
    for(int i=0; i<4; i++)
    {
        for(int j=0; j<4; j++)
        {
            if(t.block[i][j]==1 && x+i>=0)
            {
                gotoXY(2*(y+j)+22,x+i);
                cout << "■";
            }
        }
    }
};

void Interface::deleteBlock1()
{
    for(int i=0;i<4;i++)
    {
        for(int j=0;j<4;j++)
        {
            if(tempBlock.block[i][j]==1 && x+i>=0)
            {
                gotoXY(2*(y+j)+22,x+i);
                cout << "  ";
            }
        }
    }
};

void Interface::refreshBlock1(int x0, int y0, Block temp)
{
    x = x0;
    y = y0;
    tempBlock = temp;
}

void Interface::printMap1(int map[20][10])
{
    SetConsoleTextAttribute(hOut,15);
    for(int i=0; i<20; i++)
    {
        for(int j=0; j<10; j++)
        {
            if(map[i][j]==1)
            {
                gotoXY(2*j+22,i);
                cout << "■";
            }
        }
    }
}

void Interface::clearMap1(int map[20][10])
{
    for(int i=0; i<20; i++)
    {
        for(int j=0; j<10; j++)
        {
            gotoXY(2*j+22,i);
            cout << "  ";
        }
    }
}
